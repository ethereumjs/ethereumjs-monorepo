name: MPT
on:
  workflow_call:
    inputs:
      dep-cache-key:
        required: false
        type: string
  workflow_dispatch:
    inputs:
      dep-cache-key:
        required: false
        default: 'none'
      submodule-cache-key:
        required: false
        default: 'none'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}-mpt
  cancel-in-progress: true

env:
  CI: true

jobs:
  test-mpt:
    runs-on: ubuntu-24.04
    steps:
      - name: Restore prepared workspace (if provided)
        if: inputs.dep-cache-key != 'none'
        uses: actions/cache/restore@v4
        id: dep-cache
        with:
          path: ${{ github.workspace }}
          key: ${{ inputs.dep-cache-key }}

      - name: Checkout repository (fallback)
        if: steps.dep-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js (enable pnpm store cache)
        uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Prefetch deps
        run: pnpm fetch --frozen-lockfile

      - name: Install dependencies (fallback)
        if: steps.dep-cache.outputs.cache-hit != 'true'
        working-directory: ${{ github.workspace }}
        run: pnpm install --frozen-lockfile --ignore-scripts --prefer-offline

      - name: Build
        run: pnpm -w -r --filter @ethereumjs/mpt... run build

      - name: Coverage @ethereumjs/mpt
        working-directory: ${{ github.workspace }}/packages/mpt
        run: pnpm run coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/packages/mpt/coverage/lcov.info
          flags: mpt

  # mpt-benchmarks:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/setup-node@v5
  #       with:
  #         node-version: 18
  #         cache: 'npm'

  #     - run: npm ci
  #       working-directory: ${{github.workspace}}

  #     - run: npm run benchmarks | tee output.txt
  #       working-directory: ${{ env.cwd }}

  #     # Run git stash in case github-action-benchmark has trouble switching to gh-pages branch due to differing package-locks
  #     - run: git stash

  #     - name: Compare benchmarks
  #       uses: rhysd/github-action-benchmark@v1
  #       with:
  #         tool: 'benchmarkjs'
  #         # Where the output from the benchmark tool is stored
  #         output-file-path: ${{ env.cwd }}/output.txt
  #         # Location of data in gh-pages branch
  #         benchmark-data-dir-path: dev/bench/mpt
  #         # GitHub API token to make a commit comment
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         # Push and deploy to GitHub pages branch automatically (if on master)
  #         auto-push: ${{ github.ref == 'refs/heads/master' }}
  #         # Only keep and display the last 30 commits worth of benchmark data
  #         max-items-in-chart: 30

  #     # Re-apply git stash to prepare for saving back to cache.
  #     # Avoids exit code 1 by checking if there are changes to be stashed first
  #     - run: STASH_LIST=`git stash list` && [ ! -z $STASH_LIST ] && git stash apply || echo "No files to stash-apply. Skippingâ€¦"

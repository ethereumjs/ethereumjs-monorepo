name: Client
on:
  workflow_call:
    inputs:
      dep-cache-key:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      dep-cache-key:
        required: false
        default: 'none'
      submodule-cache-key:
        required: false
        default: 'none'


env:
  cwd: ${{github.workspace}}/packages/client

defaults:
  run:
    working-directory: packages/client

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}-client
  cancel-in-progress: true


jobs:
  test-client:
    runs-on: ubuntu-latest
    steps:
      # We clone the repo and submodules if triggered from work-flow dispatch
      - if: inputs.submodule-cache-key == 'none'
        uses: actions/checkout@v4

      - if: inputs.dep-cache-key != 'none' 
        uses: actions/cache/restore@v4
        id: dep-cache
        with:
          path: ${{github.workspace}}
          key: ${{ inputs.dep-cache-key }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies (if not restored from cache)
        if: steps.dep-cache.outputs.cache-hit != 'true'
        run: npm ci     
        working-directory: ${{ github.workspace }}

      - run: npm run coverage
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.cwd }}/coverage/lcov.info
          flags: client

      - uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd ${{github.workspace}}/packages/client && npm run test:integration

  test-client-dockerfile:
    name: test client docker file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build from source
        run: >
          docker buildx build .
          --tag ethereumjs:local
          --platform linux/amd64
          --build-arg COMMIT=$(git rev-parse HEAD)
        working-directory: ${{github.workspace}}
      - name: Kurtosis Assertoor GitHub Action
        uses: ethpandaops/kurtosis-assertoor-github-action@v1
        with:
          ethereum_package_args: ${{github.workspace}}/.github/workflows/kurtosis-args.yaml

  test-client-cli:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - if: inputs.submodule-cache-key == 'none'
        uses: actions/checkout@v4

      # We restore the code/deps from cache if triggered from workflow_call (i.e. have valid cache key)
      - if: inputs.dep-cache-key != 'none' 
        uses: actions/cache/restore@v4
        id: dep-cache
        with:
          path: ${{github.workspace}}
          key: ${{ inputs.dep-cache-key }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies (if not restored from cache)
        if: steps.dep-cache.outputs.cache-hit != 'true'
        run: npm ci     
        working-directory: ${{ github.workspace }}

      - run: cd ${{github.workspace}}/packages/client && npx vitest run test/cli/cli

  # assertoor:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #     - name: Kurtosis Assertoor GitHub Action
  #       uses: ethpandaops/kurtosis-assertoor-github-action@v1
  #       with:
  #         ethereum_package_args: ${{github.workspace}}/.github/workflows/kurtosis-args.yaml
